1) For standalone Java app, make sure the "log4j.properties" file is under "project/classes" directory.
2) For Java web applications, make sure the "log4j.properties" file is under "WEB-INF/classes" directory.

Let break it down :

a) %d{yyyy-MM-dd HH:mm:ss} = Date and time format, refer to SimpleDateFormat JavaDoc.
b) %-5p = The logging priority, like DEBUG or ERROR. The -5 is optional, for the pretty print format.
c) %c{1} = The logging name we set via getLogger(), refer to log4j PatternLayout guide.
d) %L = The line number from where the logging request.
e) %m%n = The message to log and line break.

Log message examples :

2014-07-02 20:52:39 DEBUG className:200 - This is debug message
2014-07-02 20:52:39 DEBUG className:201 - This is debug message2

---------------------------------------------------------------------------------------------------------------------

log4j.rootLogger=error, stdout

Run the HelloExample again, you will get the following output:

2014-07-02 20:56:02 ERROR HelloExample:27 - This is error : mkyong
2014-07-02 20:56:02 FATAL HelloExample:28 - This is fatal : mkyong

package org.apache.log4j;

public class Priority {

  public final static int OFF_INT = Integer.MAX_VALUE;
  public final static int FATAL_INT = 50000;
  public final static int ERROR_INT = 40000;
  public final static int WARN_INT  = 30000;
  public final static int INFO_INT  = 20000;
  public final static int DEBUG_INT = 10000;
  public final static int ALL_INT = Integer.MIN_VALUE;
}

If priority is defined in log4j.properties, only THE SAME OR ABOVE PRIORITY message will be logged !!!